@model CapstoneProject.Project

@{
    ViewBag.Title = "Project Details";
}

<h2>Your Project Details</h2>
@{
    @Html.ActionLink("Back to list", "Projects", null, new { @class = "btn btn-default" })
    if (Session["UserType"].ToString().Equals("Admin"))
    {    
        if (Model.State.Equals("Pending"))
        {          
            <button type="button" class="btn btn-success" data-toggle="modal" data-target="#approveModal">Approve</button>
            <button type="button" class="btn btn-danger" data-toggle="modal" data-target="#rejectModal">Reject</button>
        }
        else if (Model.State.Equals("Assigned"))
        {
            <button type="button" class="btn btn-success" data-toggle="modal" data-target="#markCompleted">Mark Complete</button>
        }
        <button type="button" class="btn btn-info" data-toggle="modal" data-target="#changeType">Change Project Type</button>
    }
    else
    {
        if (Model.State.Equals("Pending"))
        { <span> </span> @Html.ActionLink("Edit Project", "EditProject", new { id = Model.ProjectId }, new { @class = "btn btn-info" }) }
    }
}
<hr class="colorgraph"/>
<ul class="tab">
    <li><a href="javascript:void(0)" class="tablinks" onclick="openTab(event, 'Skillset')" id="skills">General Information</a></li>
    <li><a href="javascript:void(0)" class="tablinks" onclick="openTab(event, 'Coop')">Other Information</a></li>
</ul>


<div id="Skillset" class="tabcontent">
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Criteria.Goal)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Criteria.Goal)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.State)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.State)
        </dd>

        @{if (Session["UserType"].ToString().Equals("Admin"))
            {
                <dt>
                    @Html.DisplayNameFor(model => model.Type)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Type)
                </dd>
                <dt>
                    @Html.DisplayNameFor(model => model.Client.CompanyName)
                </dt>

                <dd>
                    @Html.DisplayFor(model => model.Client.CompanyName)
                </dd>
            }
        }

    </dl>
</div>
<div id="Coop" class="tabcontent">
    <table class="table table-striped">
        <thead>
            <tr>
                <td>
                    <h4>Criteria</h4>
                </td>
                <td><h4>Yes/No</h4></td>
                <td><h4>Additional Information</h4></td>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td class="col-md-4">@Html.DisplayNameFor(model => model.Criteria.Storage)</td>
                <td class="col-md-2">@(Model.Criteria.Storage ? "Yes" : "No")</td>
                <td class="col-md-6">@Html.DisplayFor(model => model.Criteria.StorageComment)</td>
            </tr>
            <tr>
                <td class="col-md-4">@Html.DisplayNameFor(model => model.Criteria.Application)</td>
                <td class="col-md-2">@(Model.Criteria.Application ? "Yes" : "No")</td>
                <td class="col-md-6">@Html.DisplayFor(model => model.Criteria.ApplicationComment)</td>
            </tr>
            <tr>
                <td class="col-md-4">@Html.DisplayNameFor(model => model.Criteria.Website)</td>
                <td class="col-md-2">@(Model.Criteria.Website ? "Yes" : "No")</td>
                <td class="col-md-6">@Html.DisplayFor(model => model.Criteria.WebsiteComment)</td>
            </tr>
            <tr>
                <td class="col-md-4">@Html.DisplayNameFor(model => model.Criteria.Mobile)</td>
                <td class="col-md-2">@(Model.Criteria.Mobile ? "Yes" : "No")</td>
                <td class="col-md-6">@Html.DisplayFor(model => model.Criteria.MobileComment)</td>
            </tr>
        </tbody>
    </table>
</div>
<!-- Approve Modal -->
<div id="approveModal" class="modal fade" role="dialog" tabindex="-1">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Approve Project?</h4>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to approve this project?</p>
                <p>Select a project type:</p>
                    <div class="form-group">
                        <label class="col-sm-1 control-label"
                               for="projectype">Type: </label>
                        <div class="col-sm-4">
                            <select class="form-control" id="projectype" name="projectype">
                                <option value="1">Type 1</option>
                                <option value="2">Type 2</option>
                                <option value="3">Type 3</option>
                                <option value="4">Type 4</option>
                            </select>
                        </div>
                    </div>
                    <br />
                    </div>
                    <div class="modal-footer">
                        <button type="button" id="@Model.ProjectId" value="Approved" class="btn btn-success btnApprove">Approve</button>
                        <button type="button" class="btn btn-info" data-dismiss="modal">Cancel</button>
                    </div>
            </div>
    </div>
</div>

<!-- Reject Modal -->
<div id="rejectModal" class="modal fade" role="dialog" tabindex="-1">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Reject Project?</h4>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to reject this project?</p>           
            </div>
            <br />
            <div class="modal-footer">
                <button type="button" id="@Model.ProjectId" value="Rejected" class="btn btn-danger btnReject">Reject</button>
                <button type="button" class="btn btn-info" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<!-- Change Type Modal -->
<div id="changeType" class="modal fade" role="dialog" tabindex="-1">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Change Project Type?</h4>
            </div>
            <div class="modal-body">
                <p>Select a project type: <span id="approveerror" style="display: none;" class="text-danger">Invalid project type</span></p>
                <div class="form-group">
                    <label class="col-sm-1 control-label"
                           for="projectype">Type:</label>
                    <div class="col-sm-4">
                        <select class="form-control" id="projectype" name="changetype">
                            <option value="1">Type 1</option>
                            <option value="2">Type 2</option>
                            <option value="3">Type 3</option>
                            <option value="4">Type 4</option>
                        </select>
                    </div>
                </div>
            <br />
            </div>
            <div class="modal-footer">
                <button type="button" id="@Model.ProjectId" value="@Model.State" class="btn btn-success btnChange">Save</button>
                <button type="button" class="btn btn-info" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<!-- Mark Completed -->
<div id="markCompleted" class="modal fade" role="dialog" tabindex="-1">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Mark Project Complete?</h4>
            </div>
            <div class="modal-body">
                <p>Would you like to mark the project complete?</p>
            </div>
            <div class="modal-footer">
                <button type="button" id="@Model.ProjectId" value="Complete " class="btn btn-success btnMarkComplete">Mark Complete</button>
                <button type="button" class="btn btn-info" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        function ApproveProject(pId, pState, pType)
        {
            $.ajax({
                url: '/Projects/ApproveProject',
                type: 'POST',
                dataType: 'text',
                data: {
                    id: pId,
                    state: pState,
                    type: pType
                },
                success: function (data) {
                    window.location.href = "/Projects/Projects";
                }
            });
        }

        function UpdateProjectState(pId, pState)
        {
            $.ajax({
                url: '/Projects/UpdateProjectState',
                type: 'POST',
                dataType: 'text',
                data: {
                    id: pId,
                    state: pState
                },
                success: function (data) {
                    window.location.href = "/Projects/Projects";
                }
            });
        }

        $('.btnApprove').on('click', function (e) {
            ApproveProject($(this).attr("id"), $(this).val(), $('select[name=projectype]').val());
        });

        $('.btnChange').on('click', function (e) {
            ApproveProject($(this).attr("id"), $(this).val(), $('select[name=changetype]').val());
        });

        $('.btnReject').on('click', function (e) {
            UpdateProjectState($(this).attr("id"), $(this).val());
        });

         $('.btnMarkComplete').on('click', function (e) {
             UpdateProjectState($(this).attr("id"), $(this).val());
         });
            
    });
</script>

<style>
    /* Style the list */
    ul.tab {
        list-style-type: none;
        margin: 0;
        padding: 0;
        overflow: hidden;
        border: 1px solid #ccc;
        background-color: #f1f1f1;
    }

        /* Float the list items side by side */
        ul.tab li {
            float: left;
        }

            /* Style the links inside the list items */
            ul.tab li a {
                display: inline-block;
                color: black;
                text-align: center;
                padding: 14px 16px;
                text-decoration: none;
                transition: 0.3s;
                font-size: 17px;
            }

                /* Change background color of links on hover */
                ul.tab li a:hover {
                    background-color: #ddd;
                }

                /* Create an active/current tablink class */
                ul.tab li a:focus, .active {
                    background-color: #ccc;
                }

    /* Style the tab content */
    .tabcontent {
        display: none;
        padding: 6px 12px;
        border: 1px solid #ccc;
        border-top: none;
    }
</style>
<script>
    document.getElementById("skills").click();

    function openTab(evt, cityName) {
        // Declare all variables
        var i, tabcontent, tablinks;

        // Get all elements with class="tabcontent" and hide them
        tabcontent = document.getElementsByClassName("tabcontent");
        for (i = 0; i < tabcontent.length; i++) {
            tabcontent[i].style.display = "none";
        }

        // Get all elements with class="tablinks" and remove the class "active"
        tablinks = document.getElementsByClassName("tablinks");
        for (i = 0; i < tablinks.length; i++) {
            tablinks[i].className = tablinks[i].className.replace(" active", "");
        }

        // Show the current tab, and add an "active" class to the link that opened the tab
        document.getElementById(cityName).style.display = "block";
        evt.currentTarget.className += " active";
    }
</script>
