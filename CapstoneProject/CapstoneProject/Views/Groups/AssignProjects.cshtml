@model CapstoneProject.Models.ViewModels.GroupProject

@{
    ViewBag.Title = "AssignProjects";
}

<h2>Apply for Projects</h2>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    var projList = Model.Projects.ToList();
    @Html.HiddenFor(model => model.Group.GroupId)
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Projects[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Projects[0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Projects[0].Type)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Projects[0].State)
            </th>
            <th>
                @Html.DisplayName("Apply")
            </th>
        </tr>
        @for (int i=0;i<projList.Count();i++)
            {
            <tr>
                <td>
                    @Html.HiddenFor(modelItem => projList[i].ProjectId)
                    @Html.DisplayFor(modelItem => projList[i].Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => projList[i].Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => projList[i].Type)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => projList[i].State)
                </td>

          
                    <td>
                        <input type="checkbox" class="chk-act" id="@projList[i].ProjectId" value="@projList[i].ProjectId" name="chkSelected"
                               checked="@Model.Group.Projects.Contains(projList[i])" disabled="@projList[i].State.Equals("Pending")">
                    </td>
            </tr>
        }
    </table>
    <input type="submit" name="button" value="Save" class="btn btn-success" />   
    @Html.ActionLink("Back", "Details", "Groups", null, new { @class = "btn btn-info" })
    <span style="color:red"> @ViewBag.CountError </span>
}

